name: Coverage (Coveralls)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install coverage tools
        run: |
          rustup component add llvm-tools-preview
          if ! command -v cargo-llvm-cov >/dev/null 2>&1; then
            cargo install cargo-llvm-cov --locked
          else
            echo "cargo-llvm-cov already installed"
          fi

      - name: Generate merged coverage including integration tests (lcov)
        env:
          RUN_CONTAINERS: "1"           # request running container-based tests
          SKIP_CONTAINER_TESTS: "0"     # ensure ignored integration tests run
        run: |
          set -euo pipefail
          cargo llvm-cov clean --workspace
          # 1) Workspace (all features), no report yet
          cargo llvm-cov --workspace --all-features --no-report
          # 2) Merge backend integrations (ignored tests) per package
          SKIP_CONTAINER_TESTS=0 cargo llvm-cov --package storeit_libsql --all-features --no-report -- --ignored
          SKIP_CONTAINER_TESTS=0 cargo llvm-cov --package storeit_mysql_async --all-features --no-report -- --ignored
          SKIP_CONTAINER_TESTS=0 cargo llvm-cov --package storeit_tokio_postgres --all-features --no-report -- --ignored
          # 3) Emit final LCOV report
          cargo llvm-cov report --lcov --output-path lcov.info

      - name: Upload to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          format: lcov
          file: lcov.info
